// Mocks generated by Mockito 5.4.6 from annotations
// in flower_tracking/test/features/auth/apply_screen/data/datasources/remote/apply_remote_datasource_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i7;

import 'package:flower_tracking/core/api_manager/api_manager.dart' as _i4;
import 'package:flower_tracking/features/auth/apply_screen/data/models/response/apply_response_dto.dart'
    as _i3;
import 'package:flower_tracking/features/auth/login/data/model/request/login_request_dto.dart'
    as _i6;
import 'package:flower_tracking/features/auth/login/data/model/response/login_response_dto.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponseDto_0 extends _i1.SmartFake
    implements _i2.LoginResponseDto {
  _FakeLoginResponseDto_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeApplyResponseDto_1 extends _i1.SmartFake
    implements _i3.ApplyResponseDto {
  _FakeApplyResponseDto_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [RestClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestClient extends _i1.Mock implements _i4.RestClient {
  MockRestClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.LoginResponseDto> login(_i6.LoginRequestDto? request) =>
      (super.noSuchMethod(
            Invocation.method(#login, [request]),
            returnValue: _i5.Future<_i2.LoginResponseDto>.value(
              _FakeLoginResponseDto_0(
                this,
                Invocation.method(#login, [request]),
              ),
            ),
          )
          as _i5.Future<_i2.LoginResponseDto>);

  @override
  _i5.Future<_i3.ApplyResponseDto> applyDriver(
    String? country,
    String? firstName,
    String? lastName,
    String? vehicleType,
    String? vehicleNumber,
    _i7.File? vehicleLicense,
    String? email,
    String? phone,
    String? nid,
    _i7.File? nIDImg,
    String? password,
    String? rePassword,
    String? gender,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#applyDriver, [
              country,
              firstName,
              lastName,
              vehicleType,
              vehicleNumber,
              vehicleLicense,
              email,
              phone,
              nid,
              nIDImg,
              password,
              rePassword,
              gender,
            ]),
            returnValue: _i5.Future<_i3.ApplyResponseDto>.value(
              _FakeApplyResponseDto_1(
                this,
                Invocation.method(#applyDriver, [
                  country,
                  firstName,
                  lastName,
                  vehicleType,
                  vehicleNumber,
                  vehicleLicense,
                  email,
                  phone,
                  nid,
                  nIDImg,
                  password,
                  rePassword,
                  gender,
                ]),
              ),
            ),
          )
          as _i5.Future<_i3.ApplyResponseDto>);
}
